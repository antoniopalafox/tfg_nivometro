{
  "dashboard": {
    "id": null,
    "title": "üèîÔ∏è Niv√≥metro Ant√°rtida - TFG Dashboard",
    "tags": ["tfg", "antartica", "nivometro", "sensors"],
    "timezone": "UTC",
    "panels": [
      {
        "id": 1,
        "title": "üìè Distancia Nieve (Ultrasonido HC-SR04P)",
        "type": "stat",
        "gridPos": {"h": 8, "w": 8, "x": 0, "y": 0},
        "targets": [
          {
            "query": "from(bucket: \"nivometro_sensor_data\") |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\") |> filter(fn: (r) => r[\"topic\"] == \"nivometro/antartica/ultrasonic\") |> filter(fn: (r) => r[\"_field\"] == \"distance_cm\") |> aggregateWindow(every: v.windowPeriod, fn: last)",
            "refId": "A"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "cm",
            "color": {"mode": "palette-classic"},
            "thresholds": {
              "steps": [
                {"color": "green", "value": 0},
                {"color": "yellow", "value": 50},
                {"color": "orange", "value": 100},
                {"color": "red", "value": 200}
              ]
            },
            "displayName": "Distancia Nieve"
          }
        },
        "options": {
          "colorMode": "background",
          "graphMode": "area",
          "justifyMode": "center"
        }
      },
      {
        "id": 2,
        "title": "‚öñÔ∏è Peso Nieve Acumulada (HX711)",
        "type": "stat", 
        "gridPos": {"h": 8, "w": 8, "x": 8, "y": 0},
        "targets": [
          {
            "query": "from(bucket: \"nivometro_sensor_data\") |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\") |> filter(fn: (r) => r[\"topic\"] == \"nivometro/antartica/weight\") |> filter(fn: (r) => r[\"_field\"] == \"weight_g\") |> aggregateWindow(every: v.windowPeriod, fn: last)",
            "refId": "B"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "g",
            "color": {"mode": "palette-classic"},
            "thresholds": {
              "steps": [
                {"color": "blue", "value": 0},
                {"color": "green", "value": 100},
                {"color": "yellow", "value": 500},
                {"color": "red", "value": 1000}
              ]
            },
            "displayName": "Peso Total"
          }
        }
      },
      {
        "id": 3,
        "title": "üî¨ Distancia L√°ser (VL53L0X)",
        "type": "stat",
        "gridPos": {"h": 8, "w": 8, "x": 16, "y": 0},
        "targets": [
          {
            "query": "from(bucket: \"nivometro_sensor_data\") |> range(start: v.timeRangeStart, stop: v.timeRangeStart) |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\") |> filter(fn: (r) => r[\"topic\"] == \"nivometro/antartica/laser\") |> filter(fn: (r) => r[\"_field\"] == \"distance_mm\") |> aggregateWindow(every: v.windowPeriod, fn: last)",
            "refId": "C"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "mm",
            "color": {"mode": "palette-classic"},
            "displayName": "Distancia L√°ser"
          }
        }
      },
      {
        "id": 4,
        "title": "üìà Evoluci√≥n Temporal - Todos los Sensores",
        "type": "timeseries",
        "gridPos": {"h": 12, "w": 24, "x": 0, "y": 8},
        "targets": [
          {
            "query": "from(bucket: \"nivometro_sensor_data\") |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\") |> filter(fn: (r) => r[\"topic\"] =~ /nivometro\\/antartica\\/(ultrasonic|weight|laser)/) |> aggregateWindow(every: v.windowPeriod, fn: mean)",
            "refId": "D"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "color": {"mode": "palette-classic"},
            "custom": {
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 10,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "vis": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 2,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            }
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "distance_cm"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Ultrasonido (cm)"
                },
                {
                  "id": "color",
                  "value": {
                    "mode": "fixed",
                    "fixedColor": "blue"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName", 
                "options": "weight_g"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Peso (g)"
                },
                {
                  "id": "color",
                  "value": {
                    "mode": "fixed",
                    "fixedColor": "green"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "distance_mm"  
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "L√°ser (mm)"
                },
                {
                  "id": "color",
                  "value": {
                    "mode": "fixed", 
                    "fixedColor": "red"
                  }
                }
              ]
            }
          ]
        }
      },
      {
        "id": 5,
        "title": "üîã Estado del Sistema",
        "type": "stat",
        "gridPos": {"h": 6, "w": 12, "x": 0, "y": 20},
        "targets": [
          {
            "query": "from(bucket: \"nivometro_sensor_data\") |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\") |> filter(fn: (r) => r[\"topic\"] == \"nivometro/antartica/status\") |> filter(fn: (r) => r[\"_field\"] == \"battery_v\") |> aggregateWindow(every: v.windowPeriod, fn: last)",
            "refId": "E"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "unit": "volt",
            "displayName": "Bater√≠a",
            "thresholds": {
              "steps": [
                {"color": "red", "value": 3.0},
                {"color": "yellow", "value": 3.5},
                {"color": "green", "value": 3.7}
              ]
            }
          }
        }
      },
      {
        "id": 6,
        "title": "‚ö†Ô∏è Estado Sensores",
        "type": "stat",
        "gridPos": {"h": 6, "w": 12, "x": 12, "y": 20},
        "targets": [
          {
            "query": "from(bucket: \"nivometro_sensor_data\") |> range(start: v.timeRangeStart, stop: v.timeRangeStop) |> filter(fn: (r) => r[\"_measurement\"] == \"mqtt_consumer\") |> filter(fn: (r) => r[\"topic\"] == \"nivometro/antartica/status\") |> filter(fn: (r) => r[\"_field\"] == \"sensor_mask\") |> aggregateWindow(every: v.windowPeriod, fn: last)",
            "refId": "F"
          }
        ],
        "fieldConfig": {
          "defaults": {
            "displayName": "Sensores OK",
            "mappings": [
              {
                "options": {
                  "7": {"text": "‚úÖ Todos OK", "color": "green"},
                  "6": {"text": "‚ö†Ô∏è Ultrasonido FAIL", "color": "yellow"},
                  "5": {"text": "‚ö†Ô∏è Peso FAIL", "color": "yellow"},
                  "4": {"text": "‚ö†Ô∏è Ultrasonido+Peso FAIL", "color": "orange"},
                  "3": {"text": "‚ö†Ô∏è L√°ser FAIL", "color": "yellow"},
                  "2": {"text": "‚ö†Ô∏è Ultrasonido+L√°ser FAIL", "color": "orange"},
                  "1": {"text": "‚ö†Ô∏è Peso+L√°ser FAIL", "color": "orange"},
                  "0": {"text": "üö® Todos FAIL", "color": "red"}
                },
                "type": "value"
              }
            ]
          }
        }
      }
    ],
    "time": {
      "from": "now-1h",
      "to": "now"
    },
    "refresh": "30s",
    "version": 1
  }
}